{"version":3,"sources":["axios.js","Row.js","requests.js","Banner.js","Nav.js","App.js","reportWebVitals.js","index.js"],"names":["instance","axios","create","baseURL","Row","title","fetchUrl","isLargeRow","useState","movies","setMovies","trailerUrl","setTrailerUrl","useEffect","a","get","request","data","results","fetchData","console","table","className","map","movie","onClick","movieTrailer","name","then","url","urlParams","URLSearchParams","URL","search","catch","error","log","handleClick","src","poster_path","backdrop_path","alt","id","videoId","opts","height","width","playerVars","autoplay","API_KEY","requests","fetchTrending","fetchNetflixOriginals","fetchTopRated","fetchActionMovies","fetchComedyMovies","fetchHorrorMovies","fetchRomanceMovies","fetchDocumentaries","Banner","str","n","setMovie","Math","floor","random","length","style","backgroundSize","backgroundImage","backgroundPosition","original_name","overview","substr","Nav","show","handleShow","window","addEventListener","scrollY","removeEventListener","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2624b4ea.chunk.js","sourcesContent":["import axios from \"axios\";\r\n\r\nconst instance = axios.create({\r\n\r\n    baseURL: \"https://api.themoviedb.org/3\",   \r\n});\r\n\r\nexport default instance;\r\n\r\n","import React , { useState , useEffect} from 'react';\r\nimport axios from './axios'; \r\nimport './Row.css';\r\nimport Youtube from 'react-youtube';\r\nimport movieTrailer from 'movie-trailer';\r\n\r\n\r\nconst base_url = \"https://image.tmdb.org/t/p/original/\";\r\n\r\nfunction Row({ title,fetchUrl,isLargeRow }) {\r\n\r\n    const [movies , setMovies] = useState([]);\r\n\r\n    const[trailerUrl,setTrailerUrl] = useState(\"\");\r\n\r\n    useEffect(() => {\r\n\r\n        async function fetchData() {\r\n\r\n            const request = await axios.get(fetchUrl);\r\n            //console.log(request);\r\n            setMovies(request.data.results);\r\n            return request;\r\n\r\n        }\r\n        \r\n    fetchData();\r\n    }, [fetchUrl]);\r\n\r\n    console.table(movies);\r\n    \r\n    const opts = {\r\n        height: \"390\",\r\n        width: \"100%\",\r\n        playerVars:{\r\n            autoplay:1,\r\n        }\r\n    };\r\n\r\n    const handleClick = (movie) =>{\r\n\r\n        if(trailerUrl){\r\n\r\n            setTrailerUrl('');\r\n        }\r\n\r\n\r\n        else{\r\n\r\n            movieTrailer(movie?.name || \"\")\r\n\r\n            .then(url => {\r\n\r\n                const urlParams = new URLSearchParams(new URL(url).search);\r\n\r\n                setTrailerUrl(urlParams.get('v'));\r\n\r\n\r\n            }).catch(error => console.log(error));\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"row\">\r\n\r\n            <h2>{title}</h2>\r\n            <div className=\"row_posters\">  \r\n            \r\n        {movies.map((movie) => (\r\n        <img \r\n\r\n            onClick={() => handleClick(movie)}  \r\n\r\n            className={`row_poster ${isLargeRow && \"row_posterLarge\"}`}\r\n            key={movie.id}\r\n            src={`${base_url}${isLargeRow ? movie.poster_path : movie.backdrop_path}`} \r\n            \r\n            alt={movie.name}\r\n            \r\n        />\r\n\r\n            ) )}\r\n\r\n            </div>\r\n            {trailerUrl && <Youtube videoId={trailerUrl} opts={opts}/>}\r\n\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\nexport default Row;\r\n","const API_KEY = \"7d7e59497fb565513307bc0a33b2df23\";\r\n\r\nconst requests = {\r\n    fetchTrending: `/trending/all/week?api_key=${API_KEY}&language=en-US`,\r\n    fetchNetflixOriginals: `/discover/tv?api_key=${API_KEY}&with_networks=213`,\r\n    fetchTopRated: `/movie/top_rated?api_key=${API_KEY}&language=en-US`,\r\n    fetchActionMovies: `/discover/movie?api_key=${API_KEY}&with_genres=28`,\r\n    fetchComedyMovies: `/discover/movie?api_key=${API_KEY}&with_genres=35`,\r\n    fetchHorrorMovies: `/discover/movie?api_key=${API_KEY}&with_genres=27`,\r\n    fetchRomanceMovies: `/discover/movie?api_key=${API_KEY}&with_genres=10749`,\r\n    fetchDocumentaries: `/discover/movie?api_key=${API_KEY}&with_genres=99`,\r\n  }\r\n  \r\n  export default requests;\r\n  ","import React, { useEffect, useState } from 'react'\r\n\r\nimport axios from './axios';\r\n\r\nimport requests  from './requests';\r\n\r\nimport './Banner.css';\r\n\r\nfunction Banner() {\r\n    \r\n    const [movie,setMovie] = useState([]);\r\n\r\n\r\nuseEffect(() =>{\r\n\r\n       async function fetchData(){\r\n\r\n            const request = await  axios.get(requests.fetchNetflixOriginals);\r\n\r\n            //*Math.random gets a value between 0 - 1, \r\n            ///then you multiply it to the range of the array and \r\n            ///finally drop the decimal with Math.floor\r\n             \r\n            setMovie(request.data.results[Math.floor(Math.random() * request.data.results.length - 1)]);\r\n\r\n            return request;\r\n\r\n\r\n\r\n        }\r\n\r\n        fetchData();\r\n\r\n},[]);\r\n\r\n console.log(movie);\r\n\r\n\r\nfunction truncate(str, n) {\r\n\r\n    return str?.length > n? str.substr(0, n - 1) + '...' : str;\r\n}\r\n\r\n\r\n    return (\r\n    \r\n    <header className=\"banner\"\r\n      \r\n      style = {{\r\n\r\n        backgroundSize: \"cover\",\r\n\r\n        backgroundImage: `url(\"https://image.tmdb.org/t/p/original/${movie?.backdrop_path}\")`,\r\n        \r\n\r\n        backgroundPosition: \"center center\",\r\n\r\n      }}\r\n    \r\n    >\r\n\r\n\r\n\r\n    <div className=\"banner_contents\">\r\n    \r\n    <h1 className = \"banner_title\">\r\n\r\n      {movie?.title ||  movie?.name || movie?.original_name}\r\n\r\n    </h1>\r\n\r\n\r\n    <div className='banner_buttons'>\r\n    \r\n    <button className=\"banner_button\">Play</button>\r\n    \r\n    <button className=\"banner_button\">My List</button>\r\n    \r\n    </div>\r\n\r\n\r\n    <h1 className=\"banner_description\">\r\n\r\n      {truncate(movie?.overview,150)}\r\n\r\n    </h1>\r\n\r\n    </div>\r\n\r\n     <div className=\"banner--fadeBottom\" />\r\n\r\n      </header>\r\n    );\r\n\r\n\r\n\r\n}\r\n\r\nexport default Banner;\r\n","import React, { useEffect,useState } from 'react';\r\nimport './Nav.css';\r\n\r\nfunction Nav() {\r\n\r\n      const [show, handleShow] = useState(false);\r\n\r\n  useEffect(() => {\r\n    window.addEventListener(\"scroll\", () => {\r\n      if (window.scrollY > 100) {\r\n        handleShow(true);\r\n      } else handleShow(false);\r\n    });\r\n    return () => {\r\n      window.removeEventListener(\"scroll\");\r\n    };\r\n  }, []);\r\n\r\n\r\n    return (\r\n        <div className  ={`nav ${show && \"nav_black\"} `}>\r\n            <img\r\n        className=\"nav_logo\"\r\n        src=\"http://whatchareading.com/wp-content/uploads/2015/01/Netflix_Logo_Digital-Video.png\"\r\n        alt=\"Netflix Logo\"\r\n      />\r\n       <img\r\n        className=\"nav_avatar\"\r\n        src=\"https://pbs.twimg.com/profile_images/1240119990411550720/hBEe3tdn_400x400.png\"\r\n        alt=\"Netflix Logo\"\r\n      />\r\n\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Nav;\r\n","//import logo from './logo.svg';\nimport React from 'react';  \nimport './App.css';\nimport Row from './Row'; \nimport requests from './requests';\nimport Banner from './Banner';\n\nimport Nav from './Nav';\nfunction App() {\n  return (\n    <div className=\"app\">\n     \n     {/* nav bar */}\n    <Nav/>\n\n     {/*Banner */}\n \n    <Banner/>\n\n    <Row \n    \n    title=\"Netflix Originals\" \n    fetchUrl={requests.fetchNetflixOriginals} \n    isLargeRow = {true}\n    />\n    <Row title=\"Trending Now\" fetchUrl={requests.fetchTrending} />\n    <Row title=\"Top Rated\" fetchUrl={requests.fetchTopRated} />\n    <Row title=\"Action Movies\" fetchUrl={requests.fetchActionMovies} />\n    <Row title=\"Comedy Movies\" fetchUrl={requests.fetchComedyMovies} />\n    <Row title=\"Horror Movies\" fetchUrl={requests.fetchHorrorMovies} />\n    <Row title=\"Romance Genre\" fetchUrl={requests.fetchRomanceMovies} />\n    <Row title=\"Documentaries\" fetchUrl={requests.fetchDocumentaries} />\n    \n\n    </div>\n\n\n    //<Row title=\"Netflix Originals\" />\n    //<Row title=\"Trending Now\" />\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}